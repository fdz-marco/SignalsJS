/* Repository: https://github.com/fdz-marco/SignalsJS minified using https://minify-js.com/ */
const e=(()=>{let e=null,n=new Set,t=!1;function ref(r,s={}){const{persist:o=!1,key:u=null,history:i=!1,historySize:l=100}=s;let a=r;if(o&&u){const e=localStorage.getItem(u);if(null!==e&&e!==undefined)try{a=JSON.parse(e)}catch(d){console.error(`Error loading persisted value for ${u}:`,d)}}const c=new Set,f=i?new History(l):null;function signal(r){if(0===arguments.length)return e&&(c.add(e),e.deps.add(signal)),a;if(r!==a){const e=a;if(a=r,o&&u)try{localStorage.setItem(u,JSON.stringify(a))}catch(d){console.error(`Error persisting value for ${u}:`,d)}i&&!signal._isUndoRedo&&f.push(a),t?n.add((()=>notifyObservers(c,e))):notifyObservers(c,e)}}if(i&&f.push(a),signal.observers=c,signal.peek=()=>a,i&&(signal.undo=()=>{const e=f.undo();null!==e&&e!==undefined&&(signal._isUndoRedo=!0,signal(e),signal._isUndoRedo=!1)},signal.redo=()=>{const e=f.redo();null!==e&&e!==undefined&&(signal._isUndoRedo=!0,signal(e),signal._isUndoRedo=!1)}),s.debug){signal.debug={log:()=>{console.log("Signal value:",a),console.log("Number of observers:",c.size)},trace:()=>{console.trace("Signal update stack trace"),console.log("Current value:",a)},observers:()=>{console.log("Current observers:",Array.from(c))},history:i?()=>{console.log("History state:",{past:f.past,future:f.future})}:null};const e=signal;return function debugSignal(n){if(0===arguments.length)return console.log("[Debug] Getting value:",a),e();console.log("[Debug] Setting value:",n);const t=e(n);return console.log("[Debug] New value set:",a),t}}return signal}function effect(n){function run(t){!function cleanup(e){e.deps.forEach((n=>{n.observers["delete"](e)})),e.deps.clear()}(run),e=run,run.deps=new Set;try{n(t)}finally{e=null}}return run.deps=new Set,run(),run}function computed(e){const n=ref(undefined);return effect((()=>n(e()))),n}function notifyObservers(e,n){Array.from(e).forEach((e=>e(n)))}class History{constructor(e=100){this.past=[],this.future=[],this.maxSize=e}push(e){const n=JSON.parse(JSON.stringify(e));this.past.push(n),this.past.length>this.maxSize&&this.past.shift(),this.future=[]}undo(){if(this.past.length<=1)return null;const e=this.past.pop();return this.future.push(e),this.past[this.past.length-1]}redo(){if(0===this.future.length)return null;const e=this.future.pop();return this.past.push(e),e}}return{ref:ref,computed:computed,effect:effect,batch:function batch(e){if(t)return e();t=!0;try{e()}finally{t=!1;const e=Array.from(n);n.clear(),e.forEach((e=>e()))}},watch:function watch(e,n){effect((()=>n(e())))},derive:function derive(...e){const n=e.pop(),t=e;return computed((()=>n(...t.map((e=>e())))))},when:function when(e,n){return effect((()=>{e()&&n()}))},asyncComputed:function asyncComputed(e){const n=ref(null),t=ref(!1),r=ref(null);return effect((async()=>{t(!0),r(null);try{const t=await e();n(t)}catch(s){r(s)}finally{t(!1)}})),{signal:n,loading:t,error:r}}}})();"undefined"!=typeof module&&module.exports&&(module.exports=e);